[{"id":"ts_app_Namespace_app","name":"app","kind":"Namespace","module":"app","language":"typescript","comment":"This package is also accessible with `window.__TAURI__.app` when `tauri.conf.json > build > withGlobalTauri` is set to true.","url":"https://tauri.studio/docs/api/js/modules/app#app","declaration":"Module app"},{"id":"ts_app_Function_getName","name":"getName","kind":"Function","module":"app","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/app#getName","declaration":"function getName(getName: Promise) { ... }"},{"id":"ts_app_Function_getTauriVersion","name":"getTauriVersion","kind":"Function","module":"app","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/app#getTauriVersion","declaration":"function getTauriVersion(getTauriVersion: Promise) { ... }"},{"id":"ts_app_Function_getVersion","name":"getVersion","kind":"Function","module":"app","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/app#getVersion","declaration":"function getVersion(getVersion: Promise) { ... }"},{"id":"ts_cli_Namespace_cli","name":"cli","kind":"Namespace","module":"cli","language":"typescript","comment":"This package is also accessible with `window.__TAURI__.cli` when `tauri.conf.json > build > withGlobalTauri` is set to true.","url":"https://tauri.studio/docs/api/js/modules/cli#cli","declaration":"Module cli"},{"id":"ts_cli_Interface_ArgMatch","name":"ArgMatch","kind":"Interface","module":"cli","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/cli#ArgMatch","declaration":"interface ArgMatch {\n\toccurrences,\n\tvalue\n}"},{"id":"ts_cli_Interface_CliMatches","name":"CliMatches","kind":"Interface","module":"cli","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/cli#CliMatches","declaration":"interface CliMatches {\n\targs,\n\tsubcommand\n}"},{"id":"ts_cli_Interface_SubcommandMatch","name":"SubcommandMatch","kind":"Interface","module":"cli","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/cli#SubcommandMatch","declaration":"interface SubcommandMatch {\n\tmatches,\n\tname\n}"},{"id":"ts_cli_Function_getMatches","name":"getMatches","kind":"Function","module":"cli","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/cli#getMatches","declaration":"function getMatches(getMatches: Promise) { ... }"},{"id":"ts_clipboard_Namespace_clipboard","name":"clipboard","kind":"Namespace","module":"clipboard","language":"typescript","comment":"This package is also accessible with `window.__TAURI__.clipboard` when `tauri.conf.json > build > withGlobalTauri` is set to true.","url":"https://tauri.studio/docs/api/js/modules/clipboard#clipboard","declaration":"Module clipboard"},{"id":"ts_clipboard_Function_readText","name":"readText","kind":"Function","module":"clipboard","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/clipboard#readText","declaration":"function readText(readText: Promise) { ... }"},{"id":"ts_clipboard_Function_writeText","name":"writeText","kind":"Function","module":"clipboard","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/clipboard#writeText","declaration":"function writeText(writeText: Promise) { ... }"},{"id":"ts_dialog_Namespace_dialog","name":"dialog","kind":"Namespace","module":"dialog","language":"typescript","comment":"This package is also accessible with `window.__TAURI__.dialog` when `tauri.conf.json > build > withGlobalTauri` is set to true.\n\nThe APIs must be allowlisted on `tauri.conf.json`:\n```json\n{\n  \"tauri\": {\n    \"allowlist\": {\n      \"dialog\": {\n        \"all\": true, // enable all dialog APIs\n        \"open\": true, // enable file open API\n        \"save\": true // enable file save API\n      }\n    }\n  }\n}\n```\nIt is recommended to allowlist only the APIs you use for optimal bundle size and security.","url":"https://tauri.studio/docs/api/js/modules/dialog#dialog","declaration":"Module dialog"},{"id":"ts_dialog_Interface_DialogFilter","name":"DialogFilter","kind":"Interface","module":"dialog","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/dialog#DialogFilter","declaration":"interface DialogFilter {\n\textensions,\n\tname\n}"},{"id":"ts_dialog_Interface_OpenDialogOptions","name":"OpenDialogOptions","kind":"Interface","module":"dialog","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/dialog#OpenDialogOptions","declaration":"interface OpenDialogOptions {\n\tdefaultPath,\n\tdirectory,\n\tfilters,\n\tmultiple\n}"},{"id":"ts_dialog_Interface_SaveDialogOptions","name":"SaveDialogOptions","kind":"Interface","module":"dialog","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/dialog#SaveDialogOptions","declaration":"interface SaveDialogOptions {\n\tdefaultPath,\n\tfilters\n}"},{"id":"ts_dialog_Function_ask","name":"ask","kind":"Function","module":"dialog","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/dialog#ask","declaration":"function ask(ask: Promise) { ... }"},{"id":"ts_dialog_Function_confirm","name":"confirm","kind":"Function","module":"dialog","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/dialog#confirm","declaration":"function confirm(confirm: Promise) { ... }"},{"id":"ts_dialog_Function_message","name":"message","kind":"Function","module":"dialog","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/dialog#message","declaration":"function message(message: Promise) { ... }"},{"id":"ts_dialog_Function_open","name":"open","kind":"Function","module":"dialog","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/dialog#open","declaration":"function open(open: Promise) { ... }"},{"id":"ts_dialog_Function_save","name":"save","kind":"Function","module":"dialog","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/dialog#save","declaration":"function save(save: Promise) { ... }"},{"id":"ts_event_Namespace_event","name":"event","kind":"Namespace","module":"event","language":"typescript","comment":"This package is also accessible with `window.__TAURI__.event` when `tauri.conf.json > build > withGlobalTauri` is set to true.","url":"https://tauri.studio/docs/api/js/modules/event#event","declaration":"Module event"},{"id":"ts_event_Interface_Event","name":"Event","kind":"Interface","module":"event","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/event#Event","declaration":"interface Event {\n\tevent,\n\tid,\n\tpayload\n}"},{"id":"ts_event_Type_alias_EventCallback","name":"EventCallback","kind":"Type alias","module":"event","language":"typescript","type":{"type":"reflection","declaration":{"id":66,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"event.ts","line":44,"character":24}],"signatures":[{"id":67,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":68,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":59,"typeArguments":[{"type":"reference","id":69,"name":"T"}],"name":"Event"}}],"type":{"type":"intrinsic","name":"void"}}]}},"url":"https://tauri.studio/docs/api/js/modules/event#EventCallback","declaration":"Type alias EventCallback"},{"id":"ts_event_Type_alias_EventName","name":"EventName","kind":"Type alias","module":"event","language":"typescript","type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":"tauri://update"},{"type":"literal","value":"tauri://update-available"},{"type":"literal","value":"tauri://update-install"},{"type":"literal","value":"tauri://update-status"},{"type":"literal","value":"tauri://resize"},{"type":"literal","value":"tauri://move"},{"type":"literal","value":"tauri://close-requested"},{"type":"literal","value":"tauri://focus"},{"type":"literal","value":"tauri://blur"},{"type":"literal","value":"tauri://scale-change"},{"type":"literal","value":"tauri://menu"},{"type":"literal","value":"tauri://file-drop"},{"type":"literal","value":"tauri://file-drop-hover"},{"type":"literal","value":"tauri://file-drop-cancelled"}]},{"type":"intrinsic","name":"string"}],"name":"LiteralUnion"},"url":"https://tauri.studio/docs/api/js/modules/event#EventName","declaration":"Type alias EventName"},{"id":"ts_event_Type_alias_UnlistenFn","name":"UnlistenFn","kind":"Type alias","module":"event","language":"typescript","type":{"type":"reflection","declaration":{"id":71,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"event.ts","line":46,"character":18}],"signatures":[{"id":72,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}},"url":"https://tauri.studio/docs/api/js/modules/event#UnlistenFn","declaration":"Type alias UnlistenFn"},{"id":"ts_event_Function_emit","name":"emit","kind":"Function","module":"event","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/event#emit","declaration":"function emit(emit: Promise) { ... }"},{"id":"ts_event_Function_listen","name":"listen","kind":"Function","module":"event","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/event#listen","declaration":"function listen(listen: Promise) { ... }"},{"id":"ts_event_Function_once","name":"once","kind":"Function","module":"event","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/event#once","declaration":"function once(once: Promise) { ... }"},{"id":"ts_fs_Namespace_fs","name":"fs","kind":"Namespace","module":"fs","language":"typescript","comment":"This package is also accessible with `window.__TAURI__.fs` when `tauri.conf.json > build > withGlobalTauri` is set to true.\n\nThe APIs must be allowlisted on `tauri.conf.json`:\n```json\n{\n  \"tauri\": {\n    \"allowlist\": {\n      \"fs\": {\n        \"all\": true, // enable all FS APIs\n        \"readTextFile\": true,\n        \"readBinaryFile\": true,\n        \"writeFile\": true,\n        \"writeBinaryFile\": true,\n        \"readDir\": true,\n        \"copyFile\": true,\n        \"createDir\": true,\n        \"removeDir\": true,\n        \"removeFile\": true,\n        \"renameFile\": true\n      }\n    }\n  }\n}\n```\nIt is recommended to allowlist only the APIs you use for optimal bundle size and security.","url":"https://tauri.studio/docs/api/js/modules/fs#fs","declaration":"Module fs"},{"id":"ts_fs_Reference_Dir","name":"Dir","kind":"Reference","module":"fs","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/fs#Dir","declaration":"type Dir = {\n\tundefined\n}"},{"id":"ts_fs_Enumeration_BaseDirectory","name":"BaseDirectory","kind":"Enumeration","module":"fs","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/fs#BaseDirectory","declaration":"enum BaseDirectory {\n\tApp,\n\tAudio,\n\tCache,\n\tConfig,\n\tCurrent,\n\tData,\n\tDesktop,\n\tDocument,\n\tDownload,\n\tExecutable,\n\tFont,\n\tHome,\n\tLocalData,\n\tLog,\n\tPicture,\n\tPublic,\n\tResource,\n\tRuntime,\n\tTemplate,\n\tVideo\n}"},{"id":"ts_fs_Interface_FileEntry","name":"FileEntry","kind":"Interface","module":"fs","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/fs#FileEntry","declaration":"interface FileEntry {\n\tchildren,\n\tname,\n\tpath\n}"},{"id":"ts_fs_Interface_FsBinaryFileOption","name":"FsBinaryFileOption","kind":"Interface","module":"fs","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/fs#FsBinaryFileOption","declaration":"interface FsBinaryFileOption {\n\tcontents,\n\tpath\n}"},{"id":"ts_fs_Interface_FsDirOptions","name":"FsDirOptions","kind":"Interface","module":"fs","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/fs#FsDirOptions","declaration":"interface FsDirOptions {\n\tdir,\n\trecursive\n}"},{"id":"ts_fs_Interface_FsOptions","name":"FsOptions","kind":"Interface","module":"fs","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/fs#FsOptions","declaration":"interface FsOptions {\n\tdir\n}"},{"id":"ts_fs_Interface_FsTextFileOption","name":"FsTextFileOption","kind":"Interface","module":"fs","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/fs#FsTextFileOption","declaration":"interface FsTextFileOption {\n\tcontents,\n\tpath\n}"},{"id":"ts_fs_Function_copyFile","name":"copyFile","kind":"Function","module":"fs","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/fs#copyFile","declaration":"function copyFile(copyFile: Promise) { ... }"},{"id":"ts_fs_Function_createDir","name":"createDir","kind":"Function","module":"fs","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/fs#createDir","declaration":"function createDir(createDir: Promise) { ... }"},{"id":"ts_fs_Function_readBinaryFile","name":"readBinaryFile","kind":"Function","module":"fs","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/fs#readBinaryFile","declaration":"function readBinaryFile(readBinaryFile: Promise) { ... }"},{"id":"ts_fs_Function_readDir","name":"readDir","kind":"Function","module":"fs","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/fs#readDir","declaration":"function readDir(readDir: Promise) { ... }"},{"id":"ts_fs_Function_readTextFile","name":"readTextFile","kind":"Function","module":"fs","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/fs#readTextFile","declaration":"function readTextFile(readTextFile: Promise) { ... }"},{"id":"ts_fs_Function_removeDir","name":"removeDir","kind":"Function","module":"fs","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/fs#removeDir","declaration":"function removeDir(removeDir: Promise) { ... }"},{"id":"ts_fs_Function_removeFile","name":"removeFile","kind":"Function","module":"fs","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/fs#removeFile","declaration":"function removeFile(removeFile: Promise) { ... }"},{"id":"ts_fs_Function_renameFile","name":"renameFile","kind":"Function","module":"fs","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/fs#renameFile","declaration":"function renameFile(renameFile: Promise) { ... }"},{"id":"ts_fs_Function_writeBinaryFile","name":"writeBinaryFile","kind":"Function","module":"fs","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/fs#writeBinaryFile","declaration":"function writeBinaryFile(writeBinaryFile: Promise) { ... }"},{"id":"ts_fs_Function_writeFile","name":"writeFile","kind":"Function","module":"fs","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/fs#writeFile","declaration":"function writeFile(writeFile: Promise) { ... }"},{"id":"ts_globalShortcut_Namespace_globalShortcut","name":"globalShortcut","kind":"Namespace","module":"globalShortcut","language":"typescript","comment":"This package is also accessible with `window.__TAURI__.globalShortcut` when `tauri.conf.json > build > withGlobalTauri` is set to true.\n\nThe APIs must be allowlisted on `tauri.conf.json`:\n```json\n{\n  \"tauri\": {\n    \"allowlist\": {\n      \"globalShortcut\": {\n        \"all\": true // enable all global shortcut APIs\n      }\n    }\n  }\n}\n```\nIt is recommended to allowlist only the APIs you use for optimal bundle size and security.","url":"https://tauri.studio/docs/api/js/modules/globalShortcut#globalShortcut","declaration":"Module globalShortcut"},{"id":"ts_globalShortcut_Type_alias_ShortcutHandler","name":"ShortcutHandler","kind":"Type alias","module":"globalShortcut","language":"typescript","type":{"type":"reflection","declaration":{"id":169,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"globalShortcut.ts","line":29,"character":30}],"signatures":[{"id":170,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":171,"name":"shortcut","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]}},"url":"https://tauri.studio/docs/api/js/modules/globalShortcut#ShortcutHandler","declaration":"Type alias ShortcutHandler"},{"id":"ts_globalShortcut_Function_isRegistered","name":"isRegistered","kind":"Function","module":"globalShortcut","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/globalShortcut#isRegistered","declaration":"function isRegistered(isRegistered: Promise) { ... }"},{"id":"ts_globalShortcut_Function_register","name":"register","kind":"Function","module":"globalShortcut","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/globalShortcut#register","declaration":"function register(register: Promise) { ... }"},{"id":"ts_globalShortcut_Function_registerAll","name":"registerAll","kind":"Function","module":"globalShortcut","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/globalShortcut#registerAll","declaration":"function registerAll(registerAll: Promise) { ... }"},{"id":"ts_globalShortcut_Function_unregister","name":"unregister","kind":"Function","module":"globalShortcut","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/globalShortcut#unregister","declaration":"function unregister(unregister: Promise) { ... }"},{"id":"ts_globalShortcut_Function_unregisterAll","name":"unregisterAll","kind":"Function","module":"globalShortcut","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/globalShortcut#unregisterAll","declaration":"function unregisterAll(unregisterAll: Promise) { ... }"},{"id":"ts_http_Namespace_http","name":"http","kind":"Namespace","module":"http","language":"typescript","comment":"This package is also accessible with `window.__TAURI__.http` when `tauri.conf.json > build > withGlobalTauri` is set to true.\n\nThe APIs must be allowlisted on `tauri.conf.json`:\n```json\n{\n  \"tauri\": {\n    \"allowlist\": {\n      \"http\": {\n        \"all\": true, // enable all http APIs\n        \"request\": true // enable HTTP request API\n      }\n    }\n  }\n}\n```\nIt is recommended to allowlist only the APIs you use for optimal bundle size and security.","url":"https://tauri.studio/docs/api/js/modules/http#http","declaration":"Module http"},{"id":"ts_http_Enumeration_ResponseType","name":"ResponseType","kind":"Enumeration","module":"http","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/http#ResponseType","declaration":"enum ResponseType {\n\tBinary,\n\tJSON,\n\tText\n}"},{"id":"ts_http_Class_Body","name":"Body","kind":"Class","module":"http","language":"typescript","url":"https://tauri.studio/docs/api/js/classes/http.Body","declaration":"Class Body {\n\tpayload,\n\ttype,\n\tbytes,\n\tform,\n\tjson,\n\ttext\n}"},{"id":"ts_http_Class_Client","name":"Client","kind":"Class","module":"http","language":"typescript","url":"https://tauri.studio/docs/api/js/classes/http.Client","declaration":"Class Client {\n\tid,\n\tdelete,\n\tdrop,\n\tget,\n\tpatch,\n\tpost,\n\tput,\n\trequest\n}"},{"id":"ts_http_Class_Response","name":"Response","kind":"Class","module":"http","language":"typescript","url":"https://tauri.studio/docs/api/js/classes/http.Response","declaration":"Class Response {\n\tdata,\n\theaders,\n\tok,\n\tstatus,\n\turl\n}"},{"id":"ts_http_Interface_ClientOptions","name":"ClientOptions","kind":"Interface","module":"http","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/http#ClientOptions","declaration":"interface ClientOptions {\n\tconnectTimeout,\n\tmaxRedirections\n}"},{"id":"ts_http_Interface_HttpOptions","name":"HttpOptions","kind":"Interface","module":"http","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/http#HttpOptions","declaration":"interface HttpOptions {\n\tbody,\n\theaders,\n\tmethod,\n\tquery,\n\tresponseType,\n\ttimeout,\n\turl\n}"},{"id":"ts_http_Type_alias_FetchOptions","name":"FetchOptions","kind":"Type alias","module":"http","language":"typescript","type":{"type":"reference","typeArguments":[{"type":"reference","id":194,"name":"HttpOptions"},{"type":"literal","value":"url"}],"name":"Omit"},"url":"https://tauri.studio/docs/api/js/modules/http#FetchOptions","declaration":"Type alias FetchOptions"},{"id":"ts_http_Type_alias_HttpVerb","name":"HttpVerb","kind":"Type alias","module":"http","language":"typescript","type":{"type":"union","types":[{"type":"literal","value":"GET"},{"type":"literal","value":"POST"},{"type":"literal","value":"PUT"},{"type":"literal","value":"DELETE"},{"type":"literal","value":"PATCH"},{"type":"literal","value":"HEAD"},{"type":"literal","value":"OPTIONS"},{"type":"literal","value":"CONNECT"},{"type":"literal","value":"TRACE"}]},"url":"https://tauri.studio/docs/api/js/modules/http#HttpVerb","declaration":"Type alias HttpVerb"},{"id":"ts_http_Type_alias_Part","name":"Part","kind":"Type alias","module":"http","language":"typescript","type":{"type":"union","types":[{"type":"literal","value":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]},"url":"https://tauri.studio/docs/api/js/modules/http#Part","declaration":"Type alias Part"},{"id":"ts_http_Type_alias_RequestOptions","name":"RequestOptions","kind":"Type alias","module":"http","language":"typescript","type":{"type":"reference","typeArguments":[{"type":"reference","id":194,"name":"HttpOptions"},{"type":"union","types":[{"type":"literal","value":"method"},{"type":"literal","value":"url"}]}],"name":"Omit"},"url":"https://tauri.studio/docs/api/js/modules/http#RequestOptions","declaration":"Type alias RequestOptions"},{"id":"ts_http_Function_fetch","name":"fetch","kind":"Function","module":"http","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/http#fetch","declaration":"function fetch(fetch: Promise) { ... }"},{"id":"ts_http_Function_getClient","name":"getClient","kind":"Function","module":"http","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/http#getClient","declaration":"function getClient(getClient: Promise) { ... }"},{"id":"ts_notification_Namespace_notification","name":"notification","kind":"Namespace","module":"notification","language":"typescript","comment":"This package is also accessible with `window.__TAURI__.notification` when `tauri.conf.json > build > withGlobalTauri` is set to true.\n\nThe APIs must be allowlisted on `tauri.conf.json`:\n```json\n{\n  \"tauri\": {\n    \"allowlist\": {\n      \"notification\": {\n        \"all\": true // enable all notification APIs\n      }\n    }\n  }\n}\n```\nIt is recommended to allowlist only the APIs you use for optimal bundle size and security.","url":"https://tauri.studio/docs/api/js/modules/notification#notification","declaration":"Module notification"},{"id":"ts_notification_Interface_Options","name":"Options","kind":"Interface","module":"notification","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/notification#Options","declaration":"interface Options {\n\tbody,\n\ticon,\n\ttitle\n}"},{"id":"ts_notification_Type_alias_Permission","name":"Permission","kind":"Type alias","module":"notification","language":"typescript","type":{"type":"union","types":[{"type":"literal","value":"granted"},{"type":"literal","value":"denied"},{"type":"literal","value":"default"}]},"url":"https://tauri.studio/docs/api/js/modules/notification#Permission","declaration":"Type alias Permission"},{"id":"ts_notification_Function_isPermissionGranted","name":"isPermissionGranted","kind":"Function","module":"notification","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/notification#isPermissionGranted","declaration":"function isPermissionGranted(isPermissionGranted: Promise) { ... }"},{"id":"ts_notification_Function_requestPermission","name":"requestPermission","kind":"Function","module":"notification","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/notification#requestPermission","declaration":"function requestPermission(requestPermission: Promise) { ... }"},{"id":"ts_notification_Function_sendNotification","name":"sendNotification","kind":"Function","module":"notification","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/notification#sendNotification","declaration":"function sendNotification(sendNotification: void) { ... }"},{"id":"ts_os_Namespace_os","name":"os","kind":"Namespace","module":"os","language":"typescript","comment":"This package is also accessible with `window.__TAURI__.fs` when `tauri.conf.json > build > withGlobalTauri` is set to true.\n\nThe APIs must be allowlisted on `tauri.conf.json`:\n```json\n{\n  \"tauri\": {\n    \"allowlist\": {\n      \"os\": {\n        \"all\": true, // enable all Os APIs\n      }\n    }\n  }\n}\n```\nIt is recommended to allowlist only the APIs you use for optimal bundle size and security.","url":"https://tauri.studio/docs/api/js/modules/os#os","declaration":"Module os"},{"id":"ts_os_Variable_EOL","name":"EOL","kind":"Variable","module":"os","language":"typescript","type":{"type":"union","types":[{"type":"literal","value":"\r\n"},{"type":"literal","value":"\n"}]},"url":"https://tauri.studio/docs/api/js/modules/os#EOL","declaration":"Variable EOL"},{"id":"ts_os_Function_arch","name":"arch","kind":"Function","module":"os","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/os#arch","declaration":"function arch(arch: Promise) { ... }"},{"id":"ts_os_Function_platform","name":"platform","kind":"Function","module":"os","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/os#platform","declaration":"function platform(platform: Promise) { ... }"},{"id":"ts_os_Function_tempdir","name":"tempdir","kind":"Function","module":"os","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/os#tempdir","declaration":"function tempdir(tempdir: Promise) { ... }"},{"id":"ts_os_Function_type","name":"type","kind":"Function","module":"os","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/os#type","declaration":"function type(type: Promise) { ... }"},{"id":"ts_os_Function_version","name":"version","kind":"Function","module":"os","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/os#version","declaration":"function version(version: Promise) { ... }"},{"id":"ts_path_Namespace_path","name":"path","kind":"Namespace","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#path","declaration":"Module path"},{"id":"ts_path_Reference_BaseDirectory","name":"BaseDirectory","kind":"Reference","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#BaseDirectory","declaration":"type BaseDirectory = {\n\tundefined\n}"},{"id":"ts_path_Variable_delimiter","name":"delimiter","kind":"Variable","module":"path","language":"typescript","type":{"type":"union","types":[{"type":"literal","value":";"},{"type":"literal","value":":"}]},"url":"https://tauri.studio/docs/api/js/modules/path#delimiter","declaration":"Variable delimiter"},{"id":"ts_path_Variable_sep","name":"sep","kind":"Variable","module":"path","language":"typescript","type":{"type":"union","types":[{"type":"literal","value":"\\"},{"type":"literal","value":"/"}]},"url":"https://tauri.studio/docs/api/js/modules/path#sep","declaration":"Variable sep"},{"id":"ts_path_Function_appDir","name":"appDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#appDir","declaration":"function appDir(appDir: Promise) { ... }"},{"id":"ts_path_Function_audioDir","name":"audioDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#audioDir","declaration":"function audioDir(audioDir: Promise) { ... }"},{"id":"ts_path_Function_basename","name":"basename","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#basename","declaration":"function basename(basename: Promise) { ... }"},{"id":"ts_path_Function_cacheDir","name":"cacheDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#cacheDir","declaration":"function cacheDir(cacheDir: Promise) { ... }"},{"id":"ts_path_Function_configDir","name":"configDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#configDir","declaration":"function configDir(configDir: Promise) { ... }"},{"id":"ts_path_Function_currentDir","name":"currentDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#currentDir","declaration":"function currentDir(currentDir: Promise) { ... }"},{"id":"ts_path_Function_dataDir","name":"dataDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#dataDir","declaration":"function dataDir(dataDir: Promise) { ... }"},{"id":"ts_path_Function_desktopDir","name":"desktopDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#desktopDir","declaration":"function desktopDir(desktopDir: Promise) { ... }"},{"id":"ts_path_Function_dirname","name":"dirname","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#dirname","declaration":"function dirname(dirname: Promise) { ... }"},{"id":"ts_path_Function_documentDir","name":"documentDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#documentDir","declaration":"function documentDir(documentDir: Promise) { ... }"},{"id":"ts_path_Function_downloadDir","name":"downloadDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#downloadDir","declaration":"function downloadDir(downloadDir: Promise) { ... }"},{"id":"ts_path_Function_executableDir","name":"executableDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#executableDir","declaration":"function executableDir(executableDir: Promise) { ... }"},{"id":"ts_path_Function_extname","name":"extname","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#extname","declaration":"function extname(extname: Promise) { ... }"},{"id":"ts_path_Function_fontDir","name":"fontDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#fontDir","declaration":"function fontDir(fontDir: Promise) { ... }"},{"id":"ts_path_Function_homeDir","name":"homeDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#homeDir","declaration":"function homeDir(homeDir: Promise) { ... }"},{"id":"ts_path_Function_isAbsolute","name":"isAbsolute","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#isAbsolute","declaration":"function isAbsolute(isAbsolute: Promise) { ... }"},{"id":"ts_path_Function_join","name":"join","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#join","declaration":"function join(join: Promise) { ... }"},{"id":"ts_path_Function_localDataDir","name":"localDataDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#localDataDir","declaration":"function localDataDir(localDataDir: Promise) { ... }"},{"id":"ts_path_Function_logDir","name":"logDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#logDir","declaration":"function logDir(logDir: Promise) { ... }"},{"id":"ts_path_Function_normalize","name":"normalize","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#normalize","declaration":"function normalize(normalize: Promise) { ... }"},{"id":"ts_path_Function_pictureDir","name":"pictureDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#pictureDir","declaration":"function pictureDir(pictureDir: Promise) { ... }"},{"id":"ts_path_Function_publicDir","name":"publicDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#publicDir","declaration":"function publicDir(publicDir: Promise) { ... }"},{"id":"ts_path_Function_resolve","name":"resolve","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#resolve","declaration":"function resolve(resolve: Promise) { ... }"},{"id":"ts_path_Function_resourceDir","name":"resourceDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#resourceDir","declaration":"function resourceDir(resourceDir: Promise) { ... }"},{"id":"ts_path_Function_runtimeDir","name":"runtimeDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#runtimeDir","declaration":"function runtimeDir(runtimeDir: Promise) { ... }"},{"id":"ts_path_Function_templateDir","name":"templateDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#templateDir","declaration":"function templateDir(templateDir: Promise) { ... }"},{"id":"ts_path_Function_videoDir","name":"videoDir","kind":"Function","module":"path","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/path#videoDir","declaration":"function videoDir(videoDir: Promise) { ... }"},{"id":"ts_process_Namespace_process","name":"process","kind":"Namespace","module":"process","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/process#process","declaration":"Module process"},{"id":"ts_process_Function_exit","name":"exit","kind":"Function","module":"process","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/process#exit","declaration":"function exit(exit: Promise) { ... }"},{"id":"ts_process_Function_relaunch","name":"relaunch","kind":"Function","module":"process","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/process#relaunch","declaration":"function relaunch(relaunch: Promise) { ... }"},{"id":"ts_shell_Namespace_shell","name":"shell","kind":"Namespace","module":"shell","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/shell#shell","declaration":"Module shell"},{"id":"ts_shell_Class_Child","name":"Child","kind":"Class","module":"shell","language":"typescript","url":"https://tauri.studio/docs/api/js/classes/shell.Child","declaration":"Class Child {\n\tconstructor,\n\tpid,\n\tkill,\n\twrite\n}"},{"id":"ts_shell_Class_Command","name":"Command","kind":"Class","module":"shell","language":"typescript","commentTags":[{"tag":"example","text":"\n```typescript\nconst command = new Command('node')\ncommand.on('close', data => {\n  console.log(`command finished with code ${data.code} and signal ${data.signal}`)\n})\ncommand.on('error', error => console.error(`command error: \"${error}\"`))\ncommand.stdout.on('data', line => console.log(`command stdout: \"${line}\"`))\ncommand.stderr.on('data', line => console.log(`command stderr: \"${line}\"`))\n\nconst child = await command.spawn()\nconsole.log('pid:', child.pid)\n```\n"}],"url":"https://tauri.studio/docs/api/js/classes/shell.Command","declaration":"Class Command {\n\tconstructor,\n\tstderr,\n\tstdout,\n\texecute,\n\ton,\n\tspawn,\n\tsidecar\n}"},{"id":"ts_shell_Interface_ChildProcess","name":"ChildProcess","kind":"Interface","module":"shell","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/shell#ChildProcess","declaration":"interface ChildProcess {\n\tcode,\n\tsignal,\n\tstderr,\n\tstdout\n}"},{"id":"ts_shell_Interface_SpawnOptions","name":"SpawnOptions","kind":"Interface","module":"shell","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/shell#SpawnOptions","declaration":"interface SpawnOptions {\n\tcwd,\n\tenv\n}"},{"id":"ts_shell_Function_open","name":"open","kind":"Function","module":"shell","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/shell#open","declaration":"function open(open: Promise) { ... }"},{"id":"ts_tauri_Namespace_tauri","name":"tauri","kind":"Namespace","module":"tauri","language":"typescript","comment":"This package is also accessible with `window.__TAURI__.tauri` when `tauri.conf.json > build > withGlobalTauri` is set to true.","url":"https://tauri.studio/docs/api/js/modules/tauri#tauri","declaration":"Module tauri"},{"id":"ts_tauri_Interface_InvokeArgs","name":"InvokeArgs","kind":"Interface","module":"tauri","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/tauri#InvokeArgs","declaration":"interface InvokeArgs {\n\tundefined\n}"},{"id":"ts_tauri_Function_convertFileSrc","name":"convertFileSrc","kind":"Function","module":"tauri","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/tauri#convertFileSrc","declaration":"function convertFileSrc(convertFileSrc: string) { ... }"},{"id":"ts_tauri_Function_invoke","name":"invoke","kind":"Function","module":"tauri","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/tauri#invoke","declaration":"function invoke(invoke: Promise) { ... }"},{"id":"ts_tauri_Function_transformCallback","name":"transformCallback","kind":"Function","module":"tauri","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/tauri#transformCallback","declaration":"function transformCallback(transformCallback: string) { ... }"},{"id":"ts_updater_Namespace_updater","name":"updater","kind":"Namespace","module":"updater","language":"typescript","comment":"This package is also accessible with `window.__TAURI__.updater` when `tauri.conf.json > build > withGlobalTauri` is set to true.","url":"https://tauri.studio/docs/api/js/modules/updater#updater","declaration":"Module updater"},{"id":"ts_updater_Interface_UpdateManifest","name":"UpdateManifest","kind":"Interface","module":"updater","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/updater#UpdateManifest","declaration":"interface UpdateManifest {\n\tbody,\n\tdate,\n\tversion\n}"},{"id":"ts_updater_Interface_UpdateResult","name":"UpdateResult","kind":"Interface","module":"updater","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/updater#UpdateResult","declaration":"interface UpdateResult {\n\tmanifest,\n\tshouldUpdate\n}"},{"id":"ts_updater_Interface_UpdateStatusResult","name":"UpdateStatusResult","kind":"Interface","module":"updater","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/updater#UpdateStatusResult","declaration":"interface UpdateStatusResult {\n\terror,\n\tstatus\n}"},{"id":"ts_updater_Type_alias_UpdateStatus","name":"UpdateStatus","kind":"Type alias","module":"updater","language":"typescript","type":{"type":"union","types":[{"type":"literal","value":"PENDING"},{"type":"literal","value":"ERROR"},{"type":"literal","value":"DONE"},{"type":"literal","value":"UPTODATE"}]},"url":"https://tauri.studio/docs/api/js/modules/updater#UpdateStatus","declaration":"Type alias UpdateStatus"},{"id":"ts_updater_Function_checkUpdate","name":"checkUpdate","kind":"Function","module":"updater","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/updater#checkUpdate","declaration":"function checkUpdate(checkUpdate: Promise) { ... }"},{"id":"ts_updater_Function_installUpdate","name":"installUpdate","kind":"Function","module":"updater","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/updater#installUpdate","declaration":"function installUpdate(installUpdate: Promise) { ... }"},{"id":"ts_window_Namespace_window","name":"window","kind":"Namespace","module":"window","language":"typescript","comment":"This package is also accessible with `window.__TAURI__.window` when `tauri.conf.json > build > withGlobalTauri` is set to true.\n\nThe APIs must be allowlisted on `tauri.conf.json`:\n```json\n{\n  \"tauri\": {\n    \"allowlist\": {\n      \"window\": {\n        \"all\": true, // enable all window APIs\n        \"create\": true // enable window creation\n      }\n    }\n  }\n}\n```\nIt is recommended to allowlist only the APIs you use for optimal bundle size and security.\n\n# Window events\n\nEvents can be listened using `appWindow.listen`:\n```typescript\nimport { appWindow } from '@tauri-apps/api/window'\nappWindow.listen('tauri://move', ({ event, payload }) => {\n  const { x, y } = payload // payload here is a `PhysicalPosition`\n})\n```\n\nWindow-specific events emitted by the backend:\n\n#### 'tauri://resize'\nEmitted when the size of the window has changed.\n*EventPayload*:\n```typescript\ntype ResizePayload = PhysicalSize\n```\n\n#### 'tauri://move'\nEmitted when the position of the window has changed.\n*EventPayload*:\n```typescript\ntype MovePayload = PhysicalPosition\n```\n\n#### 'tauri://close-requested'\nEmitted when the user requests the window to be closed.\nIf a listener is registered for this event, Tauri won't close the window so you must call `appWindow.close()` manually.\n\n#### 'tauri://focus'\nEmitted when the window gains focus.\n\n#### 'tauri://blur'\nEmitted when the window loses focus.\n\n#### 'tauri://scale-change'\nEmitted when the window's scale factor has changed.\nThe following user actions can cause DPI changes:\n- Changing the display's resolution.\n- Changing the display's scale factor (e.g. in Control Panel on Windows).\n- Moving the window to a display with a different scale factor.\n*Event payload*:\n```typescript\ninterface ScaleFactorChanged {\n  scaleFactor: number\n  size: PhysicalSize\n}\n```\n\n#### 'tauri://menu'\nEmitted when a menu item is clicked.\n*EventPayload*:\n```typescript\ntype MenuClicked = string\n```\n","url":"https://tauri.studio/docs/api/js/modules/window#window","declaration":"Module window"},{"id":"ts_window_Enumeration_UserAttentionType","name":"UserAttentionType","kind":"Enumeration","module":"window","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/window#UserAttentionType","declaration":"enum UserAttentionType {\n\tCritical,\n\tInformational\n}"},{"id":"ts_window_Class_LogicalPosition","name":"LogicalPosition","kind":"Class","module":"window","language":"typescript","url":"https://tauri.studio/docs/api/js/classes/window.LogicalPosition","declaration":"Class LogicalPosition {\n\tconstructor,\n\ttype,\n\tx,\n\ty\n}"},{"id":"ts_window_Class_LogicalSize","name":"LogicalSize","kind":"Class","module":"window","language":"typescript","url":"https://tauri.studio/docs/api/js/classes/window.LogicalSize","declaration":"Class LogicalSize {\n\tconstructor,\n\theight,\n\ttype,\n\twidth\n}"},{"id":"ts_window_Class_PhysicalPosition","name":"PhysicalPosition","kind":"Class","module":"window","language":"typescript","url":"https://tauri.studio/docs/api/js/classes/window.PhysicalPosition","declaration":"Class PhysicalPosition {\n\tconstructor,\n\ttype,\n\tx,\n\ty,\n\ttoLogical\n}"},{"id":"ts_window_Class_PhysicalSize","name":"PhysicalSize","kind":"Class","module":"window","language":"typescript","url":"https://tauri.studio/docs/api/js/classes/window.PhysicalSize","declaration":"Class PhysicalSize {\n\tconstructor,\n\theight,\n\ttype,\n\twidth,\n\ttoLogical\n}"},{"id":"ts_window_Class_WebviewWindow","name":"WebviewWindow","kind":"Class","module":"window","language":"typescript","commentTags":[{"tag":"example","text":"\n```typescript\n// loading embedded asset:\nconst webview = new WebviewWindow('theUniqueLabel', {\n  url: 'path/to/page.html'\n})\n// alternatively, load a remote URL:\nconst webview = new WebviewWindow('theUniqueLabel', {\n  url: 'https://github.com/tauri-apps/tauri'\n})\n\nwebview.once('tauri://created', function () {\n // webview window successfully created\n})\nwebview.once('tauri://error', function (e) {\n // an error happened creating the webview window\n})\n\n// emit an event to the backend\nawait webview.emit(\"some event\", \"data\")\n// listen to an event from the backend\nconst unlisten = await webview.listen(\"event name\", e => {})\nunlisten()\n```\n"}],"url":"https://tauri.studio/docs/api/js/classes/window.WebviewWindow","declaration":"Class WebviewWindow {\n\tconstructor,\n\tlabel,\n\tlisteners,\n\t_handleTauriEvent,\n\tcenter,\n\tclose,\n\temit,\n\thide,\n\tinnerPosition,\n\tinnerSize,\n\tisDecorated,\n\tisFullscreen,\n\tisMaximized,\n\tisResizable,\n\tisVisible,\n\tlisten,\n\tmaximize,\n\tminimize,\n\tonce,\n\touterPosition,\n\touterSize,\n\trequestUserAttention,\n\tscaleFactor,\n\tsetAlwaysOnTop,\n\tsetDecorations,\n\tsetFocus,\n\tsetFullscreen,\n\tsetIcon,\n\tsetMaxSize,\n\tsetMinSize,\n\tsetPosition,\n\tsetResizable,\n\tsetSize,\n\tsetSkipTaskbar,\n\tsetTitle,\n\tshow,\n\tstartDragging,\n\ttoggleMaximize,\n\tunmaximize,\n\tunminimize,\n\tgetByLabel\n}"},{"id":"ts_window_Class_WebviewWindowHandle","name":"WebviewWindowHandle","kind":"Class","module":"window","language":"typescript","url":"https://tauri.studio/docs/api/js/classes/window.WebviewWindowHandle","declaration":"Class WebviewWindowHandle {\n\tconstructor,\n\tlabel,\n\tlisteners,\n\t_handleTauriEvent,\n\temit,\n\tlisten,\n\tonce\n}"},{"id":"ts_window_Class_WindowManager","name":"WindowManager","kind":"Class","module":"window","language":"typescript","url":"https://tauri.studio/docs/api/js/classes/window.WindowManager","declaration":"Class WindowManager {\n\tconstructor,\n\tlabel,\n\tlisteners,\n\t_handleTauriEvent,\n\tcenter,\n\tclose,\n\temit,\n\thide,\n\tinnerPosition,\n\tinnerSize,\n\tisDecorated,\n\tisFullscreen,\n\tisMaximized,\n\tisResizable,\n\tisVisible,\n\tlisten,\n\tmaximize,\n\tminimize,\n\tonce,\n\touterPosition,\n\touterSize,\n\trequestUserAttention,\n\tscaleFactor,\n\tsetAlwaysOnTop,\n\tsetDecorations,\n\tsetFocus,\n\tsetFullscreen,\n\tsetIcon,\n\tsetMaxSize,\n\tsetMinSize,\n\tsetPosition,\n\tsetResizable,\n\tsetSize,\n\tsetSkipTaskbar,\n\tsetTitle,\n\tshow,\n\tstartDragging,\n\ttoggleMaximize,\n\tunmaximize,\n\tunminimize\n}"},{"id":"ts_window_Interface_Monitor","name":"Monitor","kind":"Interface","module":"window","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/window#Monitor","declaration":"interface Monitor {\n\tname,\n\tposition,\n\tscaleFactor,\n\tsize\n}"},{"id":"ts_window_Interface_WindowOptions","name":"WindowOptions","kind":"Interface","module":"window","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/window#WindowOptions","declaration":"interface WindowOptions {\n\talwaysOnTop,\n\tcenter,\n\tdecorations,\n\tfileDropEnabled,\n\tfocus,\n\tfullscreen,\n\theight,\n\tmaxHeight,\n\tmaxWidth,\n\tmaximized,\n\tminHeight,\n\tminWidth,\n\tresizable,\n\tskipTaskbar,\n\ttitle,\n\ttransparent,\n\turl,\n\tvisible,\n\twidth,\n\tx,\n\ty\n}"},{"id":"ts_window_Variable_appWindow","name":"appWindow","kind":"Variable","module":"window","language":"typescript","type":{"type":"reference","id":463,"name":"WebviewWindow"},"url":"https://tauri.studio/docs/api/js/modules/window#appWindow","declaration":"Variable appWindow"},{"id":"ts_window_Function_availableMonitors","name":"availableMonitors","kind":"Function","module":"window","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/window#availableMonitors","declaration":"function availableMonitors(availableMonitors: Promise) { ... }"},{"id":"ts_window_Function_currentMonitor","name":"currentMonitor","kind":"Function","module":"window","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/window#currentMonitor","declaration":"function currentMonitor(currentMonitor: Promise) { ... }"},{"id":"ts_window_Function_getAll","name":"getAll","kind":"Function","module":"window","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/window#getAll","declaration":"function getAll(getAll: undefined) { ... }"},{"id":"ts_window_Function_getCurrent","name":"getCurrent","kind":"Function","module":"window","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/window#getCurrent","declaration":"function getCurrent(getCurrent: WebviewWindow) { ... }"},{"id":"ts_window_Function_primaryMonitor","name":"primaryMonitor","kind":"Function","module":"window","language":"typescript","url":"https://tauri.studio/docs/api/js/modules/window#primaryMonitor","declaration":"function primaryMonitor(primaryMonitor: Promise) { ... }"}]