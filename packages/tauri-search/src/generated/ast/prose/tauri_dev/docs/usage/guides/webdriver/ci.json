{"filename":"ci.md","filepath":"docs/usage/guides/webdriver","hash":42,"frontmatter":{"title":"Continuous Integration"},"text":"\nUtilizing Linux and some programs to create a fake display, it is possible to run [WebDriver] tests with\n[`tauri-driver`] on your CI. The following example will use the [WebdriverIO] example we [previously built together] and\nGitHub Actions.\n\nThis means the following assumptions:\n\n1. The Tauri application is in the repository root and the binary builds when running `cargo build --release`.\n2. The [WebDriverIO] test runner is in the `webdriver/webdriverio` directory and runs when `yarn test` is used in that\n   directory.\n\nThe following is a commented GitHub Actions workflow file at `.github/workflows/webdriver.yml`\n\n```yaml\n# run this action when the repository is pushed to\non: [ push ]\n\n# the name of our workflow\nname: WebDriver\n\njobs:\n  # a single job named test\n  test:\n    # the display name the test job\n    name: WebDriverIO Test Runner\n\n    # we want to run on the latest linux environment\n    runs-on: ubuntu-latest\n\n    # the steps our job runs **in order**\n    steps:\n      # checkout the code on the workflow runner\n      - uses: actions/checkout@v2\n\n      # install system dependencies that Tauri needs to compile on Linux.\n      # note the extra dependencies for `tauri-driver` to run which are `webkit2gtk-driver` and  `xvfb`\n      - name: Tauri dependencies\n        run: >-\n          sudo apt-get update &&\n          sudo apt-get install -y\n          libgtk-3-dev\n          libgtksourceview-3.0-dev\n          webkit2gtk-4.0\n          libappindicator3-dev\n          webkit2gtk-driver\n          xvfb\n\n      # install the latest Rust stable\n      - name: Rust stable\n        uses: actions-rs/toolchain@v1\n        with:\n          toolchain: stable\n\n      # we run our rust tests before the webdriver tests to avoid testing a broken application\n      - name: Cargo test\n        uses: actions-rs/cargo@v1\n        with:\n          command: test\n\n      # build a release build of our application to be used during our WebdriverIO tests\n      - name: Cargo build\n        uses: actions-rs/cargo@v1\n        with:\n          command: build\n          args: --release\n\n      # install the latest stable node version at the time of writing\n      - name: Node v16\n        uses: actions/setup-node@v1\n        with:\n          node-version: 16.x\n\n      # install our Node.js dependencies with Yarn\n      - name: Yarn install\n        run: yarn install\n        working-directory: webdriver/webdriverio\n\n      # install the latest version of `tauri-driver`.\n      # note: the tauri-driver version is independent of any other Tauri versions\n      - name: Install tauri-driver\n        uses: actions-rs/cargo@v1\n        with:\n          command: install\n          args: tauri-driver\n\n      # run the WebdriverIO test suite.\n      # we run it through `xvfb-run` (the dependency we installed earlier) to have a fake\n      # display server which allows our application to run headless without any changes to the code\n      - name: WebdriverIO\n        run: xvfb-run yarn test\n        working-directory: webdriver/webdriverio\n```\n\n[WebDriver]: https://www.w3.org/TR/webdriver/\n[`tauri-driver`]: https://crates.io/crates/tauri-driver\n[WebdriverIO]: https://webdriver.io/\n[previously built together]: example/webdriverio\n","h1":[],"h2":[],"h3":[],"hasCodeBlock":true,"programmingLanguages":["yaml"],"otherSymbols":["text","inlineCode","list","def"]}